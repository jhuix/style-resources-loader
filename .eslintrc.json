{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        },
        "project": [
            "tsconfig.json",
            "./test/tsconfig.json"
        ]
    },
    "extends": [
        "eslint:all",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/all",
        "plugin:import/errors",
        "plugin:import/typescript",
        "prettier",
        "prettier/@typescript-eslint"
    ],
    "plugins": [
        "@typescript-eslint",
        "import",
        "prettier"
    ],
    "env": {
        "browser": true,
        "node": true,
        "es6": true
    },
    "globals": {
        "features": true
    },
    "rules": {
        "array-element-newline": ["error", "consistent"],
        "arrow-parens": ["error", "as-needed"],
        "comma-dangle": ["error", "always-multiline"],
        "dot-location": ["error", "property"],
        "func-names": ["error", "as-needed"],
        "implicit-arrow-linebreak": "off",
        "max-len": ["error", 120],
        "max-lines-per-function": "off",
        "multiline-ternary": ["error", "always-multiline"],
        "no-confusing-arrow": "off",
        "no-implicit-coercion": "off",
        "no-mixed-operators": "off",
        "no-ternary": "off",
        "no-unused-expressions": ["error", {
            "allowShortCircuit": true,
            "allowTernary": true,
            "allowTaggedTemplates": true
        }],
        "new-cap": "off",
        "no-shadow": "off",
        "one-var": ["error", "never"],
        "padded-blocks": ["error", "never"],
        "padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "prev": ["const", "let", "var"],
                "next": "*"
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": ["const", "let", "var"]
            },
            {
                "blankLine": "any",
                "prev": ["const", "let", "var"],
                "next": ["const", "let", "var"]
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": "return"
            }
        ],
        "quote-props": ["error", "as-needed"],
        "quotes": ["error", "single", {"avoidEscape": true}],
        "sort-imports": "off",
        "sort-keys": "off",
        "wrap-regex": "off",

        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-member-accessibility": ["error", {
            "accessibility": "no-public"
        }],
        "@typescript-eslint/generic-type-naming": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-magic-numbers": "off",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-type-alias": "off",
        "@typescript-eslint/no-unnecessary-condition": "off",
        "@typescript-eslint/no-unused-expressions": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/typedef": "off",

        "prettier/prettier": "error"
    }
}
